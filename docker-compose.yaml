# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Basic Airflow cluster configuration for LocalExecutor with MySQL.
#
# WARNING: This configuration is for local development. Do not use it in a production deployment.
#
# This configuration supports basic configuration using environment variables or an .env file
# The following variables are supported:
#
# AIRFLOW_IMAGE_NAME         - Docker image name used to run Airflow.
#                              Default: apache/airflow:master-python3.8
# AIRFLOW_UID                - User ID in Airflow containers
#                              Default: 50000
# _AIRFLOW_WWW_USER_USERNAME - Username for the administrator account.
#                              Default: airflow
# _AIRFLOW_WWW_USER_PASSWORD - Password for the administrator account.
#                              Default: airflow
#
# Feel free to modify this file to suit your needs.
---
version: '3'
x-airflow-common:
    &airflow-common
    build: .
    env_file:
        - local.env
    environment:
        &airflow-common-env
        AIRFLOW_HOME: /opt/airflow
    volumes:
        - ./dags:/opt/airflow/dags
        - ./influx:/opt/airflow/plugins/influx
        - ./logs:/opt/airflow/logs
        - ./config:/opt/airflow/config
    user: "${AIRFLOW_UID:-50000}:0"
    depends_on:
        - postgres

services:
    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
        restart: always
        ports:
            - 5432:5432

    airflow-webserver:
        <<: *airflow-common
        command: webserver
        ports:
            - 9090:8080
        healthcheck:
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        depends_on:
            airflow-init:
                condition: service_completed_successfully

    airflow-scheduler:
        <<: *airflow-common
        command: scheduler
        restart: always
        depends_on:
            airflow-init:
                condition: service_completed_successfully

    airflow-redis:
        image: redis:6.2-alpine
        restart: always
        ports:
        - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes:
        - ./cache:/data
        depends_on:
            airflow-init:
                condition: service_completed_successfully

    airflow-init:
        <<: *airflow-common
        command: version
        env_file:
            - local.env
        environment:
            <<: *airflow-common-env
            _AIRFLOW_DB_UPGRADE: "true"
            _AIRFLOW_WWW_USER_CREATE: "true"
            _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
            _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

volumes:
    postgres-db-volume:
    cache:
        driver: local
